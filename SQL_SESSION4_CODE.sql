SQL FUNCTIONS ARE OF THREE TYPES:
	1.CHARACTER FUNCTIONS
	2.NUMERIC FUNCTIONS
	3.DATETIME FUNCTIONS

1.CHARACTER FUNCTIONS
	CHARACTER FUNCTIONS TAKES CHARACTER AS INPUT AND OUTPUTS THE CHARACTER, NUMBERS.

HOW TO HARD CODE VALUE TO A TABLE?

SELECT
CUSTOMER_ID,
COMPANY,
AGE,
GENDER,
STATE_CODE,
SPENT_AMOUNT,
'AUSTRALIA' AS COUNTRY,
'PHARMA_COMPANY' AS COMPANY_TYPE,
GETDATE() AS CURRENT_TIME_DATE
FROM MED_2024;

THE CHJRACTER FUNCTIONS ARE OF TWO TYPES:

	1.CASE MANIPULATIVE FUNCTIONS(UPPER,LOWER)

SELECT 'dv analytics' AS INSTITUTE_NAME;
SELECT UPPER('dv analytics') AS INSTITUTE_NAME;
SELECT LOWER('DV ANALYTICS') AS INSTITUTE_NAME;

	2.CHARACTER MANIPULATIVE FUNCTIONS

CONCAT: APPENDS OR CONCATES THE VALUES
SYNTAX: CONCAT('EXPRESSION1','EXPRESSION2'....)

EG1:

SELECT 'DV' AS F_NAME, 'DATA' AS M_NAME, 'ANALYTICS' AS L_NAME,
CONCAT('DV',' ','DATA',' ','ANALYTICS') AS FULL_NAME;

SELECT 'DV' AS F_NAME, 'DATA' AS M_NAME, 'ANALYTICS' AS L_NAME,
CONCAT('DV','_','DATA','_','ANALYTICS') AS FULL_NAME;

2.CHARINDEX: FUNCTION RETIURNS THE SUBSTRING POSITION FROM A SPECIFIED CHARACTER
3.PATINDEX: CANANOT WORK UNDERSCORE(_)

SELECT 'LAKSHMI NR' AS NAME,CHARINDEX(' ','LAKSHMI NR') AS DELIMITER_SPACE_POSITION;
SELECT 'LAKSHMI NR' AS NAME,PATINDEX('% %','LAKSHMI NR') AS DELIMITER_SPACE_POSITION;

SELECT 'LAKSHMI_NR' AS NAME,CHARINDEX('_','LAKSHMI_NR') AS DELIMITER_SPACE_POSITION;
SELECT 'LAKSHMI_NR' AS NAME,PATINDEX('%_%','LAKSHMI_NR') AS DELIMITER_SPACE_POSITION;

SELECT 'LAKSHMI#NR' AS NAME,CHARINDEX('#','LAKSHMI#NR') AS DELIMITER_SPACE_POSITION;
SELECT 'LAKSHMI#NR' AS NAME,PATINDEX('%#%','LAKSHMI#NR') AS DELIMITER_SPACE_POSITION;

4.SUBSTRING: RETURN A PORTION OF STRING GIVEN FROM START POINT AND END POINT
SYNTAX: SUBSTRING(EXPRESSION,STARTING POINT,LENGTH IN INT)

EG1:

SELECT 'ABCDE' AS ALL_CHARS, SUBSTRING('ABCDE',1,3) AS FIRST_CHARS;
SELECT 'ABCDE' AS ALL_CHARS, SUBSTRING('ABCDE',2,3) AS MID_CHARS;
SELECT 'ABCDE' AS ALL_CHARS, SUBSTRING('ABCDE',3,3) AS LAST_CHARS;

EG2:

SELECT 'INDIA IS A COUNTRY';
SELECT SUBSTRING('INDIA AS COUNTRY',12,7);

TEST:

SELECT 'HIMIKA DUTTA' AS NAME INTO STU_LISIT_SQL
UNION ALL
SELECT 'MALINI PATEL' AS NAME
UNION ALL
SELECT 'VENKATESH P' AS NAME
UNION ALL
SELECT 'LAKSHMI NR' AS NAME;

SELECT * FROM STU_LISIT_SQL;

Q: RETRIVE THE F_NAME. L_NAME FROM THE STU_NAME?

SELECT
NAME AS FULL_NAME,
SUBSTRING(NAME,1,CHARINDEX(' ',NAME)-1) AS F_NAME,
SUBSTRING(NAME,CHARINDEX(' ',NAME)+1,30) AS L_NAME
FROM STU_LISIT_SQL;

SELECT
NAME AS FULL_NAME,
SUBSTRING(NAME,1,PATINDEX('% %',NAME)-1) AS F_NAME,
SUBSTRING(NAME,PATINDEX('% %',NAME)+1,30) AS L_NAME
FROM STU_LISIT_SQL;

5. REPLACE: FINDING THE CHARCTERS AND REPLACING
SYNTAX: REPLACE(EXPRESSION, SEARCHED, REPALCEMENT)

EG:

SELECT 'SACHIN ENDULKAR' AS PLAYER_NAME;
SELECT 'SACHIN ENDULKAR' AS PLAYERS_NAME,
REPLACE('SACHIN ENDULKAR','ENDULKAR','TENDULKAR') AS PLAYER_CORRECT_NAME;

TEST:
SELECT 'ABCDE' AS NAME,
REPLACE('ABCDE','D','DOLLS') AS NEW_NAME;

6.STUFF: 4 ARGUMENTS
	1.EXPRESSION
	2.STARTING POSITION
	3.NUMBER OF CHARACTERS TO BE CHANGED
	4.REPLACEMENT EXPRESSION

SELECT 'SACHIN ENDULKAR' AS PLAYER_NAME,
STUFF('SACHIN ENDULKAR',CHARINDEX('ENDULKAR','SACHIN ENDULKAR'),8,'TENDULKAR') AS PLAYERS_CORRECT_NAME;

TEST:

SELECT STUFF('SQL TUTORIAL',1,3,'HTML');

SELECT STUFF('SQL TUTORIAL!',13,1,'IS FUN!');

7.TRIM: REMOVE BLANK SPACE

SELECT '         LAKSHMI NR' AS NAME;
SELECT LEN('         LAKSHMI NR') AS LEN_NAME;

SELECT TRIM('         LAKSHMI NR') AS NAME;
SELECT LEN(TRIM('         LAKSHMI NR')) AS LEN_NAME;

OUTPUT AS NUMBERS:

SUBSTRING(NO)-STRING
LEN: YES
CHARINDEX:YES
PATINDEX:YES
TRIM:NO(STRING)
LEN: YES

2.NUMERIC FUNCTIONS

SELECT
100 + 100 AS ADDITION,
200 -100 AS SUBTRACTION,
100 * 100 AS MULTIPLICATION,
100/100 AS DIVISION;

POWER

SELECT POWER(10,2) AS POWER_VALUE;

SQRT

SELECT SQRT(125) AS SQRT_VALUE;

REMAINDER:

SELECT 23%11 AS REMAINDER;

ISNUMERIC

 CASE 1: SELECT ISNUMERIC(1234);

CASE 2: SELECT ISNUMERIC('1234');

CASE 3: SELECT ISNUMERIC('SQL CLASS');

'0' AS OUTPUT: CASE 3

AGGREGATE FUNCTIONS:
	COUNT()
	SUM()
	AVG()
	MIN()
	MAX()
	STDEV()

SELECT 
COUNT(CUSTOMER_ID) AS SUBS,
AVG(AGE) AS AVG_AGE,
SUM(SPENT_AMOUNT) AS TOTAL_SPENT,
MIN(SPENT_AMOUNT) AS MIN_SPENT,
MAX(SPENT_AMOUNT) AS MAX_SPENT,
STDEV(SPENT_AMOUNT) AS STDEV_SPENT
FROM MED_2024;

SELECT 
COMPANY,
COUNT(CUSTOMER_ID) AS SUBS,
AVG(AGE) AS AVG_AGE,
SUM(SPENT_AMOUNT) AS TOTAL_SPENT,
MIN(SPENT_AMOUNT) AS MIN_SPENT,
MAX(SPENT_AMOUNT) AS MAX_SPENT,
STDEV(SPENT_AMOUNT) AS STDEV_SPENT
FROM MED_2024
GROUP BY COMPANY
ORDER BY 1;

ABSOLUTE:

SELECT -100 AS VALUE;
SELECT -100*-1 AS VALUE;
SELECT ABS(-100) AS VALUE;

NUMBER FORMAT IN SQL:

SELECT 1234.5678 AS SALES;
SELECT FORMAT(1234.5678,'G0') AS SALES;
SELECT FORMAT(1234.5678,'N0') AS SALES;
SELECT FORMAT(1234.5678,'N2') AS SALES;
SELECT FORMAT(1234.5678,'#.0') AS SALES;
SELECT FORMAT(1234.5678,'C0') AS SALES;

 CURRENCY FORMAT

SELECT FORMAT(1234.5678,'C0','INR-IN') AS SALES;
SELECT FORMAT(1234.5678,'C0','FR-FR') AS SALES;
SELECT FORMAT(1234.5678,'C0','DE-DE') AS SALES;
SELECT FORMAT(1234.5678,'C0','ZH-CH') AS SALES;

FLOORING AND CEILING

SELECT CEILING(1234.5678) AS SALES;
SELECT FLOOR(1234.5678) AS SALES;

SELECT CEILING(999.99) AS SALES;(UPPER VALUE)
SELECT FLOOR(999.99) AS SALES;(LOWER VALUE)

PERCENTAGE

SELECT FORMAT(.90,'P0') AS PERCENTAGE;
SELECT FORMAT(.90,'P2') AS PERCENTAGE;

DATE FUNCTIONS:

SELECT GETDATE() AS TODAYS_DATE;
SELECT YEAR(GETDATE()) AS TODAY_YEAR;
SELECT MONTH(GETDATE()) AS TODAY_MONTH;
SELECT DAY(GETDATE()) AS TODAY_DAY;

SELECT
2024 AS YEAR,
03 AS MONTH,
23 AS DAY,
DATEFROMPARTS(2024,03,23) AS DATE_VALUE;

DATEPART FUNCTION:

SELECT DATEPART(YEAR,GETDATE());
SELECT DATEPART(MONTH,GETDATE());
SELECT DATEPART(DAY,GETDATE());
SELECT DATEPART(WEEK,GETDATE());
SELECT DATEPART(HOUR,GETDATE());

HOW TO GET MONTH AND DAY NAME IN WORDS?

SELECT MONTH(GETDATE()) AS MONTH;
SELECT DATENAME(MONTH,GETDATE()) AS MONTH_NAME;
SELECT DATENAME(DAY,GETDATE()) AS MONTH_NAME;

DIFFERENCE BETWEEN DATES:

SELECT '10-15-2010' AS DV_DOB, GETDATE() AS TODAY,
DATEDIFF(YEAR,'10-15-2010',GETDATE()) YEARS_OLD;

SELECT '10-15-2010' AS DV_DOB, GETDATE() AS TODAY,
DATEDIFF(MONTH,'10-15-2010',GETDATE()) MONTH_OLD;

SELECT '10-15-2010' AS DV_DOB, GETDATE() AS TODAY,
DATEDIFF(DAY,'10-15-2010',GETDATE()) DAY_OLD;

SELECT '10-15-2010' AS DV_DOB, GETDATE() AS TODAY,
DATEDIFF(YEAR,'10-15-2010',CONVERT(DATE,GETDATE())) YEARS_OLD;

SELECT '10-15-2010' AS DV_DOB, GETDATE() AS TODAY,
DATEDIFF(MONTH,'10-15-2010',GETDATE()) MONTH_OLD;

SELECT '10-15-2010' AS DV_DOB, GETDATE() AS TODAY,
DATEDIFF(DAY,'10-15-2010',GETDATE()) DAY_OLD;

SELECT DATEDIFF(YEAR,'10-15-2010',GETDATE()) AS YEARS_OLD;

SELECT DATEDIFF(YEAR,'10-15-2010',CONVERT(DATE,GETDATE())) AS YEARS_OLD;

ADDING DATE, MONTH, YEAR

SELECT DATEADD(MONTH,2,GETDATE()) AS MONTH_ADD;
SELECT DATEADD(MONTH,2,CONVERT(DATE,GETDATE())) AS MONTH_ADD;
SELECT DATEADD(YEAR,2,CONVERT(DATE,GETDATE())) AS MONTH_ADD;
SELECT DATEADD(DAY,2,CONVERT(DATE,GETDATE())) AS MONTH_ADD;

MISC FUNCTIONS

SELECT 100 AS SALES; NUMERIC
SELECT '100' AS SALES; STRING

SELECT CAST(100 AS CHAR) AS SALES; PROGRAMMER CONVERSION (FAST)
SELECT CONVERT(VARCHAR,100) AS SALES; COMPILER CONVERSION

HOW TO GET DIFFERENT DATE FORMAT?

SELECT CONVERT(VARCHAR,GETDATE(),1); MM/DD/YY
SELECT CONVERT(VARCHAR,GETDATE(),2); YY:MM:DD
3,4,5,6,7,10,11,12,23,31,32,33,34,35,101,102,103,104(SMALLINT)

SESSION 4 COMPLETED







