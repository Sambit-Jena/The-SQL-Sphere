1.HOW TO CREATE NEW TABLE FROM EXISTING TABLE?
ANS:
SELECT * INTO MED_ALL_2024 FROM MED_2024;

SELECT * FROM MED_ALL_2024;

2.HOW TO SELECT FEW COLUMN FROM THE TABLE(CUSTOMER_ID,COMPANY,GENDER,AGE,STATE_CODE,NO_OF_TRIPS,SPENT_AMOUNT)?

ANS:
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024;

SAVE THIS AS A NEW TABLE?

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
NO_OF_TRIPS,
SPENT_AMOUNT
INTO MED_SELECTED_FIELDS
FROM MED_2024;

SELECT * FROM  MED_SELECTED_FIELDS;

3.HOW TO CREATE HARD CODED TABLE?
ANS:
HARD CODED MEANS EMBEDDING OR PASSING VALUES DIRECTLY THROUGH CODES(QUERY).

SELECT 'MALINI' AS STU_NAME, 26 AS AGE,'BTECH' AS EDUCATION INTO STU_ENQ_24
UNION ALL
SELECT 'BIKASH' AS STU_NAME, 29 AS AGE, 'MBA' AS EDUCATION
UNION ALL
SELECT 'HIMIKA' AS STU_NAME, 27 AS AGE, 'BBA' AS EDUCATION;

SELECT * FROM STU_ENQ_24;

4.HOW TO ADD A COLUMN THROUGH HARDCODING TO MED_2024?

ANS:
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
TOWN,
STATE_CODE,
NO_OF_TRIPS,
SPENT_AMOUNT,
'AUSTRALIA' AS COUNTRY,
GETDATE() AS TODAYS_DATE
FROM MED_2024;

USE DV_202402;

5.HOW TO SELECTIVELY FILTER OUT DATA?
ANS:
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO';

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO'AND GENDER='FEMALE';

WHERE COMPANY='APPOLO';

1.WHERE IS A CLAUSE(CONDITION)
2.COMPANY(FIELD) IS AN OPERAND(A FIELD WHERE CONDITIONS ARE APPLIED)
3.= IS AN OPERATOR
4.'APPOLO' IS A CONDITIONAL VALUE

WHERE COMPANY='APPOLO'AND GENDER='FEMALE';

5.'FEMALE' IS A CONDITIONAL VALUE
6.GENDER IS AN OPERAND
7.AND IS AN OPERATOR
8.= IS AN OPERATOR

WHERE AGE>=50

1.CLAUSE:WHERE
2.OPERAND:AGE
3.OPERATOR:>=
4.CONDITIONAL VALUE:50

THERE ARE 4 TYPES OF OPERATORS:
	1.LOGICAL OPERATORS(AND,OR,IN,NOT IN)
	2.COMPARISON OPERATORS(=,<,>,<=,>=,<>)
	3.SPECIAL OPERATORS(BETWEEN, LIKE)
	4.ARITHEMATIC OPERATORS(+,-,*,/)

1.LOGICAL OPERATORS(AND,OR,IN,NOT IN)

AND: AND OPERATOR DISPLAYS RECORDS WHEN BOTH CONDITIONS SEPEARATED BY AND ARE TRUE

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO'AND GENDER='FEMALE';

OR: OR DOPERATOR DISPLAYS RECORDS WHEN ONE OF THE CONDITIUONS SEPARATED BY OR IS TRUE

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO'OR GENDER='FEMALE';

IN(APPOLO,CIPLA,GENO): MORE THAN ONE ITEM VALUES

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY IN ('APPOLO','CIPLA','GENO') AND GENDER='FEMALE';

NOT IN:DISPLAYS RECORDS WHEN CONDITION IS NOT TRUE.
APPOLO,GENO,CIPLA=1141 RECORDS
TOTAL:5112
NOT IN: 5112-1141

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY  NOT IN ('APPOLO','CIPLA','GENO') AND GENDER='FEMALE';

2.COMPARISON OPERATORS(=,<,>,<=,>=,<>)

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO';

580 RECORDS

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY<>'APPOLO';

4532 RECORDS=5112-580

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO' AND AGE>=50;

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO' AND GENDER='MALE' AND SPENT_AMOUNT>=1000;

3.SPECIAL OPERATORS(BETWEEN, LIKE)

BETWEEN: OPERATOR IS USED TO SELECT VALUES WITHIN A RANGE.

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE COMPANY='APPOLO'AND AGE BETWEEN 30 AND 50;

Q.BETWEEN 30 AND 50
	WILL 30 BE TAKEN
	WILL 50 BE TAKEN
	ANS:ALL VALUES INCLUDING 30 AND 50

LIKE: SPECIFIC PATTERN
		%,_(SYNTAX)

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE TOWN LIKE 'K%';

K%: STARTING K

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE TOWN LIKE '%K';

%K: ENDING WITH K

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE TOWN LIKE '%K%';

Q: TOWH K WITH 5 CHARACTERS?

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT
FROM MED_2024
WHERE TOWN LIKE 'K_____'


4.ARITHEMATIC OPERATORS(+,-,*,/)

SELECT
100 +200 AS ADDITION,
200-100 AS SUBTRACTION,
100*200 AS MULTIPLICATION,
200/100 AS DIVISION,
100 % 3 AS REMAINDER;

USE ARITHEMATIC OPERATORS IN MED_2024

ANS:
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT,
(SPENT_AMOUNT/NO_OF_TRIPS) AS SPENT_PER_TRIPS
FROM MED_2024;

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
SPENT_AMOUNT,
FORMAT((SPENT_AMOUNT/NO_OF_TRIPS),'C0') AS SPENT_PER_TRIPS
FROM MED_2024;

6.HOW TO SORT VALUES IN SQL?
ANS:
SELECT * FROM STU_SCORE_2024;

Q: SORT THIS TABLE STU_NAME, SUBJECT,YEAR;

SELECT
STU_NAME,
SUBJECT,
YEAR,
MARKS
FROM STU_SCORE_2024
ORDER BY STU_NAME,SUBJECT,YEAR;

DEFAULT SORTING NUMBERS: ASCENDING ORDER

Q2. GET TABLE SORTED BY STU_NAME AND YEAR WISE MARKS IN DESCENDING ORDER?
ANS:

SELECT
STU_NAME,
SUBJECT,
YEAR,
MARKS
FROM STU_SCORE_2024
ORDER BY STU_NAME,YEAR,MARKS DESC

Q.GET THIS TABLE SORTED BY STU_NAME, SUBJECT WISE MARKS IN DESCENDING ORDER?

SELECT
STU_NAME,
SUBJECT,
YEAR,
MARKS
FROM STU_SCORE_2024
ORDER BY STU_NAME,SUBJECT,MARKS DESC;

7. SUMMARIZE DATA IN SQL PROGRAMMING:

SELECT COUNT(*) AS SUBS FROM MED_2024;
SELECT AVG(AGE) AS AVG_AGE FROM MED_2024;
SELECT SUM(NO_OF_TRIPS) AS TOTAL_VISITS FROM MED_2024;
SELECT SUM(SPENT_AMOUNT) AS TOTAL_SPENT FROM MED_2024;

SELECT COUNT(*) AS SUBS FROM MED_2024;
SELECT FORMAT(AVG(AGE),'N0') AS AVG_AGE FROM MED_2024;
SELECT FORMAT(SUM(NO_OF_TRIPS),'N0') AS TOTAL_VISITS FROM MED_2024;
SELECT FORMAT(SUM(SPENT_AMOUNT),'C2') AS TOTAL_SPENT FROM MED_2024;
SELECT FORMAT(MIN(SPENT_AMOUNT),'C2') AS MIN_TOTAL_SPENT FROM MED_2024;
SELECT FORMAT(MAX(SPENT_AMOUNT),'C2') AS MAX_SPENT FROM MED_2024;
SELECT FORMAT(STDEV(SPENT_AMOUNT),'C2') AS STCD_TOTAL_SPENT FROM MED_2024;

AGGREGATE FUNCTIONS:
1.COUNT()
2.SUM()
3.AVG()
4.MIN()
5.MAX()
6.STDEV()

Q:HOW TO CALL AGGREGATE FUNCTIONS TO SUMMARIZE DAT?

1.GET COMPANYWISE TOTAL SUBS IN MED_2024?

ANS:
SELECT
COMPANY,
COUNT(CUSTOMER_ID) AS TOTAL_SUBS
FROM MED_2024
GROUP BY COMPANY
ORDER BY COMPANY;

2.GET COMPANY WISE TOTAL SUBS AND TOTAL_SPENT_AMOUNT.

SELECT
COMPANY,
COUNT(CUSTOMER_ID) AS SUBS,
FORMAT(SUM(SPENT_AMOUNT),'C0') AS TOTAL_SPENT
FROM MED_2024
GROUP BY COMPANY
ORDER BY COMPANY;

3.GET STATE_CODE,COMPANY, GENDER WISE AGGREGATE FUNCTIONS.

SELECT
STATE_CODE,
COMPANY,
GENDER,
COUNT(CUSTOMER_ID) AS SUBS,
AVG(AGE) AS AVG_AGE,
SUM(NO_OF_TRIPS) AS TOTAL_TRIPS,
SUM(SPENT_AMOUNT) AS TOTAL_SPENT,
MIN(SPENT_AMOUNT) AS MIN_SPENT,
MAX(SPENT_AMOUNT) AS MAX_SPENT
FROM MED_2024
GROUP BY STATE_CODE,COMPANY,GENDER
ORDER BY STATE_CODE,COMPANY,GENDER;

SELECT
STATE_CODE,
COMPANY,
GENDER,
COUNT(CUSTOMER_ID) AS SUBS,
FORMAT(AVG(AGE),'N0') AS AVG_AGE,
FORMAT(SUM(NO_OF_TRIPS),'N0') AS TOTAL_TRIPS,
FORMAT(SUM(SPENT_AMOUNT),'C0') AS TOTAL_SPENT,
FORMAT(MIN(SPENT_AMOUNT),'C0') AS MIN_SPENT,
FORMAT(MAX(SPENT_AMOUNT),'C0') AS MAX_SPENT
FROM MED_2024
GROUP BY STATE_CODE,COMPANY,GENDER
ORDER BY STATE_CODE,COMPANY,GENDER;

SELECT
STATE_CODE,
COMPANY,
GENDER,
COUNT(CUSTOMER_ID) AS SUBS,
FORMAT(AVG(AGE),'N0') AS AVG_AGE,
FORMAT(SUM(NO_OF_TRIPS),'N0') AS TOTAL_TRIPS,
FORMAT(SUM(SPENT_AMOUNT),'C0') AS TOTAL_SPENT,
FORMAT(MIN(SPENT_AMOUNT),'C0') AS MIN_SPENT,
FORMAT(MAX(SPENT_AMOUNT),'C0') AS MAX_SPENT
FROM MED_2024
GROUP BY STATE_CODE,COMPANY,GENDER
ORDER BY 1,2,3;

9.WHERE CLAUSE AND HAVING CLAUSE

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
SPENT_AMOUNT
FROM MED_2024
WHERE SPENT_AMOUNT>=1000;

SELECT
COMPANY,
SUM(SPENT_AMOUNT) AS TOTAL_SPENT
FROM MED_2024
WHERE SUM(SPENT_AMOUNT)>10000
GROUP BY COMPANY
ORDER BY 1;

An aggregate may not appear in the WHERE clause unless it is in a subquery contained in 
a HAVING clause or a select list, and the column being aggregated is an outer reference.

SELECT
COMPANY,
SUM(SPENT_AMOUNT) AS TOTAL_SPENT
FROM MED_2024
GROUP BY COMPANY
HAVING SUM(SPENT_AMOUNT)>20000
ORDER BY 1;

CAN WE USE WHERE AND HAVING TOGETHER?
ANS: YES

SELECT
STATE_CODE,
COMPANY,
SUM(SPENT_AMOUNT) AS TOTAL_SPENT
FROM MED_2024
WHERE COMPANY IN('APPOLO','CIPLA','GSK')
GROUP BY STATE_CODE,COMPANY
HAVING SUM(SPENT_AMOUNT)>40000
ORDER BY 1,2;

HAVING CLAUSE IS USED IN COMBUNATION WITH GROUP BY TO IMPOSE CONDITIONS TO AGGREGATED VALUES

SEQUENCE OF CLAUSE:
	1.WHERE
	2.GROUP BY
	3.HAVING
	4.ORDER BY

We Go HOme:

10. SQL CASE AND WHEN STATEMENT:

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
CASE 
	WHEN AGE>=60 THEN 'OLD-AGE'
	WHEN AGE>=50 THEN 'MID-OLD-AGE'
	WHEN AGE>=40 THEN 'MID-AGE'
	WHEN AGE>=30 THEN 'MID-YOUNG-AGE'
	ELSE 'YOUNG AGE'
END AS AGE_BUCKET,
STATE_CODE,
NO_OF_TRIPS,
CASE
	WHEN NO_OF_TRIPS>=30 THEN 'REGULAR'
	WHEN NO_OF_TRIPS>=10 THEN 'POWER'
	ELSE 'CAUSUAL'
END AS VISIT_BUCKET,
SPENT_AMOUNT,
CASE	
	WHEN SPENT_AMOUNT>=1000 THEN 'PREMIER'
	WHEN SPENT_AMOUNT>=500 THEN 'ADVANCE'
	ELSE 'RETAIL'
END AS SPENT_BUCKET
FROM MED_2024;

EG2: CASE AND WHEN FOR MULTIPLE CONDITIONS:

SELECT * FROM PROD_SALES_INDIA;

IF PRODUCT IS APPLE
	AND CITY IS BANGALORE THEN .30*PRICE
	AND CITY IS MUMBAI THEN .20*PRICE
	ELSE NO DISCOUNT
IF PRODUCT IS DELL
	AND CITY IS CHENNAI THEN .10*PRICE
	AND CITY IS BHUBANESWAR THEN .30*PRICE
	ELSE NO DISCOUNT
IF PRODUCT IS HP
	AND CITY IS DELHI THEN .40*PRICE
	AND CITY IS CHENNAI THEN .50*PRICE
	ELSE NO DISCOUNT

SELECT
PRODUCT,
CITY,
PRICE,
UNITS,
CASE
	WHEN PRODUCT='APPLE' THEN
	CASE
		WHEN CITY='BANGALORE' THEN .30*PRICE
		WHEN CITY = 'MUMBAI' THEN .20*PRICE
		ELSE 0
	END
	WHEN PRODUCT='DELL' THEN
	CASE
		WHEN CITY='CHENNAI' THEN .10*PRICE
		WHEN CITY ='BHUBANESWAR' THEN .30*PRICE
		ELSE 0
	END
	WHEN PRODUCT='HP' THEN
	CASE
		WHEN CITY='DELHI' THEN .40*PRICE
		WHEN CITY = 'CHENNAI' THEN .50*PRICE
		ELSE 0
	END
END AS DISCOUNT
FROM PROD_SALES_INDIA;

11.DELETE QUERY, UPADATE QUERY:

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
SPENT_AMOUNT
INTO MED_DELETE_2024
FROM MED_2024;

SELECT * FROM MED_DELETE_2024;

DELETE MED_DELETE_2024;

SELECT * FROM MED_DELETE_2024;

INSERT INTO MED_DELETE_2024
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
SPENT_AMOUNT
FROM MED_2024;

SELECT * FROM MED_DELETE_2024;

DELETE RECORDS BASED ON CRITERIA:
COMPANY=APPOLO;GENDER=FEMALE

DELETE MED_DELETE_2024
WHERE COMPANY='APPOLO' AND GENDER='FEMALE';

SELECT * FROM MED_DELETE_2024;

UPDATE QUERRY:

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
SPENT_AMOUNT
INTO MED_UPADE_2024
FROM MED_2024;

SELECT * FROM MED_UPADE_2024;

ALTER TABLE MED_UPADE_2024
ADD AGE_BUCKET VARCHAR(20),SPENT_BUCKET VARCHAR(20);

SELECT * FROM MED_UPADE_2024;

UPDATE MED_UPADE_2024
SET AGE_BUCKET='OLD-AGE'
WHERE AGE>=60;

SELECT * FROM MED_UPADE_2024;

UPDATE MED_UPADE_2024
SET AGE_BUCKET=(CASE
	WHEN AGE>=60 THEN 'OLD-AGE'
	WHEN AGE>=50 THEN 'MID-OLD-AGE'
	WHEN AGE>=40 THEN 'MID-AGE'
	WHEN AGE>=30 THEN 'MID-YOUNG-AGE'
	ELSE 'YOUNG AGE'
	END);

SELECT * FROM MED_UPADE_2024;

UPDATE MED_UPADE_2024
SET SPENT_BUCKET=(CASE
	WHEN SPENT_AMOUNT>=1000 THEN 'PREMIER'
	WHEN SPENT_AMOUNT>=500 THEN 'ADVANCE'
	ELSE 'RETAIL'
	END);

SELECT * FROM MED_UPADE_2024;

CASE AND WHEN STATEMENT TO SUMMARIZE DATA IN MED_TABLE

SELECT
COMPANY,
COUNT(CASE WHEN GENDER='FEMALE' THEN CUSTOMER_ID END) AS FEMALE_BASE,
COUNT(CASE WHEN GENDER='MALE' THEN CUSTOMER_ID END) AS MALE_BASE,
COUNT(CASE WHEN GENDER='UNISEX' THEN CUSTOMER_ID END) AS UNISEX_BASE
FROM MED_2024
GROUP BY COMPANY
ORDER BY 1;

SELECT
COMPANY,
COUNT(CASE WHEN GENDER='FEMALE' THEN CUSTOMER_ID END) AS FEMALE_BASE,
COUNT(CASE WHEN GENDER='MALE' THEN CUSTOMER_ID END) AS MALE_BASE,
COUNT(CASE WHEN GENDER='UNISEX' THEN CUSTOMER_ID END) AS UNISEX_BASE
FROM MED_2024
GROUP BY COMPANY
ORDER BY COMPANY;

SPENT_AMOUNT

SELECT
COMPANY,
SUM(CASE WHEN GENDER='FEMALE' THEN SPENT_AMOUNT END) AS FEMALE_SPENT,
SUM(CASE WHEN GENDER='MALE' THEN SPENT_AMOUNT END) AS MALE_SPENT,
SUM(CASE WHEN GENDER='UNISEX' THEN SPENT_AMOUNT END) AS UNISEX_SPENT
FROM MED_2024
GROUP BY COMPANY
ORDER BY 1;

13. HOW TO TRANSPOSE:
	CASE1: COLUMNS TO ROWS
	CASE2: ROWS TO COLUMNS

SELECT * FROM STU_SCORE_24;

SELECT * FROM STUDENT;

CASE1: COLUMNS TO ROWS(UNPIVOT)

SELECT 
STU_NAME,
SUBJECT,
SCORE 
INTO STUDENT_SCORE
FROM STUDENT
UNPIVOT(SCORE FOR SUBJECT IN(SAS,SQL,PYTHON,TABLEAU,ML,AI)) AS X;

SELECT * FROM STUDENT_SCORE;

CASE2: ROWS TO COLUMNS(PIVOT)

SYNTAX: PIVOT(<AGGREGATE FUNCTION> (COLUMN HEADER) FOR IN(COLUMN1, COLUMN2....) AS TABLE)

SELECT
STU_NAME,
SAS,
SQL,
PYTHON,
TABLEAU,
ML,
AI
INTO  STUDENT_SCORE_ROW
FROM STUDENT_SCORE
PIVOT(SUM(SCORE) FOR SUBJECT IN(SAS,SQL,PYTHON,TABLEAU,ML,AI)) AS X;

SELECT * FROM STUDENT_SCORE_ROW;


--SESSION 2 COMPLETED
--========================


